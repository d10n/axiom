.\" Package:       Axiom
.\" File:          mktags.1
.\" Summary:       man page for the mktags shell script
.\" Maintainer:    David Wicksell <dlw@linux.com>
.\" Last Modified: May 10, 2012
.\"
.\" Written by David Wicksell <dlw@linux.com>
.\" Copyright Â© 2011,2012 Fourth Watch Software, LC
.\"
.\" This program is free software: you can redistribute it and/or modify
.\" it under the terms of the GNU Affero General Public License (AGPL)
.\" as published by the Free Software Foundation, either version 3 of
.\" the License, or (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
.\" GNU Affero General Public License for more details.
.\"
.\" You should have received a copy of the GNU Affero General Public License
.\" along with this program. If not, see http://www.gnu.org/licenses/.
.\"
.\"
.TH MKTAGS 1 "10 May 2012" "Version 0.11.0" "AXIOM Developer Tools"

.SH NAME
\fBmktags\fP - A script to build a tags file for use with the Axiom package

.SH SYNOPSIS
.B mktags
.BI "[-ep] -g"

.B mktags
.BI "[-ep] \fIfile(s)\fP"

.B mktags
.BI "-h"

.SH DESCRIPTION
.B mktags
is a shell script that will create a tags file containing MUMPS labels for use
with the Axiom package.
.PP
Normally you would call it via cron once or more daily to keep your tags file
up to date.

.SH OPTIONS
The following command line flags are optional. At least -g or a list of
files is required.
.IP -g
Parse the $gtmroutines environment variable, going through the specified
directories, building a tags file called ~/.mtags or ~/.MTAGS.
.IP -e
Run in emacs mode, building a tags file called ~/.MTAGS or ~/MTAGS in emacs
format.
.IP -p
Run in post sort mode. Normally ctags runs recursively, but because of the
difference between the internal and external format of GT.M files (% vs. _),
it has to be run individually for each routine. So mktags will keep appending
to the tags file. By default, it will keep the tags file sorted, for faster
lookups by Vim, after every routine. If you have a small amount of GT.M
routines on your system, this works just fine. But when you have a large
amount of routines to tag, like with VistA or any other large system, this
can take a long time. In that case, use post sort mode, which should speed up
the mktags script a lot.
.IP -h
Display a helpful usage message and exit.

.SH LOGS
The mktags script will log things to a log file called ~/log/mktags.log.

.SH EXAMPLE
Normally mktags is run from the command line in post sort mode, on each
directory listed in the $gtmroutines environment variable. E.g.

        $ mktags -gp

If you want, you can run it from cron by adding it to your crontab file. Keep
in mind that you will either need to use the full path to mktags, or you will
need to define $PATH in your crontab file. If you are using the -g option, you
will need to make sure to source the file that builds the $gtmroutines
environment variable, in your crontab entry, since the -g option requires that
it be defined. Running mktags from cron could be done to keep your tags file
up-to-date. Then it will keep up with added, removed, or modified MUMPS
routines.

.SH EXIT CODES
0   Success

1   ctags is not installed

2   exuberant-ctags is not installed

3   -g option being used without $gtmroutines being defined

4   Invalid option

5   Not enough arguments supplied

6   mktags is already running

7   Bad error code (Should never happen)

8   User interrupted program execution (CTRL-C/SIGINT)

.SH BUGS
There are no known bugs.

.SH AUTHOR
Written by David Wicksell <dlw@linux.com>

.SH SEE ALSO
ctags(1), ctags-exuberant(1), crontab(5), crontab(1), cron(8)
