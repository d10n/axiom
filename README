                                     README

Package:       m-tools
File:          README
Summary:       Install documentation
Version:       0.9.0
Maintainer:    David Wicksell <dlw@linux.com>
Last Modified: Nov 25, 2011
License:       AGPL Ver 3 (or later)

Package written by David Wicksell <dlw@linux.com>
Copyright Â© 2011 Fourth Watch Software, LC

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License (AGPL)
as published by the Free Software Foundation, either version 3 of
the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program. If not, see http://www.gnu.org/licenses/.

$Source: endor:/home/dlw/axiom/README $
$Revision: [7:9bced5d0701f] 2011-11-26 16:46 -0700 $

ATTENTION: This package is written to be run in a Red Hat or Ubuntu
           environment. Tweaks maybe needed for other distributions.

This is a package of utility programs that help your productivity
when editing MUMPS/GT.M routines with the vim editor, preferrably
version 6.0 or newer.

NOTE: In order to use the mtags functionality, you must build a tags
      file, and in order to use the global dump functionality you
      must install GT.M and set the environment variables that GT.M
      requires. http://www.fisglobal.com/products-technologyplatforms-gtm

A colleague of mine, John Willis <chocolatejollis38@gmail.com>, has created
a similar package of tools for use with the emacs editor. It is called
LorikeeM and you can download it from: http://code.google.com/p/lorikeem/
LorikeeM also includes my KBAWDUMP.m routine for support of global dumps
inside of vim or emacs, and my mktags/mtags.sh script for building a tags
file for either vim or emacs.

To install this, you untar the tarball, as you've already done..
      $ tar xfz m-tools-0.9.0.tgz

Then you move to the resulting m-tools-0.9.0/ directory..
      $ cd m-tools-0.9.0/

Or, you can clone the repository with the instructions on the bitbucket
page. https://bitbucket.org/dlw/m-tools

Keep in mind that if you clone it, it will create a directory name
m-tools, rather than one with a version number. If you download the
tarball from the bitbucket site, the directory will be a different name
still. But everything else should be the same.

Then you run the install script to install the m-tools utility
scripts, in the appropriate places, as well as create a .vimrc run
command file, or append or overwrite your current one. This is
to ensure that the package works correctly. It will also install
a MUMPS/GT.m routine, which is necessary to use the mtags/ctags
functionality, and a man page for the mktags shell script, which will
create the tags file necessary for the mtags/ctags functionality..
      $ ./install

If you want to install m-tools manually, make sure you copy the
following files and directories to the right places at a minimum.
<MUMPS-source-directory> refers to a directory in your gtmroutines
environment variable. 
      $ cp m-tools-0.9.0/KBAWDUMP.m <MUMPS-source-directory>
      $ cp m-tools-0.9.0/mktags ~/bin
      $ cp m-tools-0.9.0/vim ~/.vim
      $ cp m-tools-0.9.0/vimrc ~/.vimrc

That is pretty much all there is to it. If you have questions on how
to use the mktags shell script, consult the man page..
      $ man mktags

If you have any questions on how to use the KBAWDUMP.m MUMPS/GT.M
routine, consult the man page..
      $ man KBAWDUMP

If you have questions on how to use any of the features of the m-tools
package, consult the vim help page, built-in to the package, and
accessed inside of any vim editing session..
      :help m-tools

If you have any further questions you can contact:
    David Wicksell of Fourth Watch Software, LC
    at dlw@linux.com or (575)636-2229

$RCSfile: README $
