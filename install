#!/bin/bash -
#
# Package:       m-tools
# File:          install
# Summary:       install script for the m-tools package
# Version:       0.9.0
# Maintainer:    David Wicksell <dlw@linux.com>
# Last Modified: Nov 26, 2011
# License:       AGPL Ver 3 (or later)
#
# Written by David Wicksell <dlw@linux.com>
# Copyright Â© 2011 Fourth Watch Software, LC
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License (AGPL)
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see http://www.gnu.org/licenses/.
#
# $Source: endor:/home/dlw/axiom/install $
# $Revision: [3:7b1f38ce6574] 2011-11-26 13:31 -0700 $
#
# This script is written to be run in a Red Hat or Ubuntu environment.
# Tweaks maybe needed for other distributions.
#
# Do NOT set -e


#find out if they want to overwrite, backup, or append configuration files
function question {
  echo "There is a $1 file installed already. Would you like to make a"
  echo "backup of it, and install the package version, append the options"
  echo "that are required to the end of it, or overwrite the file completely?"
  echo
  echo "Please choose the number of the option you want."

  select answer in backup append overwrite quit
  do
    case ${answer} in 
    backup)
      cp -p ~/$1 ~/$1.orig

      echo "Your old $1 is now $HOME/$1.orig"

      cp -p ${1/"."/} ~/$1

      echo "Installed new $1 file"
      echo

      break
      ;;
    append)
      cat ${1/"."/} | sed "s/^set/\"set/" >> ~/$1

      echo "Appended the relevant configuration options to the end of $1"
      echo

      break
      ;;
    overwrite)
      #be extra careful with the overwrite option
      echo -n "You have chosen to ${answer} ~/$1, is this correct? [Y]/N "
      read ANS

      ANS=`echo ${ANS} | tr [:lower:] [:upper:]`

      if [ "${ANS}" == "Y" -o "${ANS}" == "YES" ]; then
        cp -p ${1/"."/} ~/$1

        echo "Installed new $1 file"
        echo

        break
      else
        continue
      fi
      ;;
    quit)
      exit 1
      ;;
    *)
      echo -n "Please choose the number of the option you want. "
      echo
    esac
  done
} # End of question

#install script starts here
clear

OS=`lsb_release -is` #Ubuntu and Red Hat do a few things differently

if [ -z "${gtmroutines}" ]; then
  echo "The gtmroutines environment variable is not defined. In order to use"
  echo "the global dumping functionality of m-tools you have to install GT.M"
  echo "and KBAWDUMP.m, as well as define gtmroutines. See the documentation:"
  echo "    http://www.fisglobal.com/products-technologyplatforms-gtm"
  echo
else
  DIR=`echo ${gtmroutines} | awk '{print $1}'`

  if [[ ${DIR} != ${DIR/"("/} ]]; then #gtmroutines with "()" source syntax
    DIR=`echo ${DIR} | cut -d "(" -f 2 | cut -d ")" -f 1`
  fi

  cp -p KBAWDUMP.m ${DIR}

  echo "Copied the KBAWDUMP.m global dumping routine to ${DIR}"
  echo "See the man page for details on how to use it. E.g. $ man KBAWDUMP"
  echo
fi

if [ ! -d ~/bin ]; then
  mkdir ~/bin
fi

cp -p mktags ~/bin

echo "Copied the mktags shell script to $HOME/bin"
echo
echo "Run mktags to build the tags file for the mtags functionality."
echo "See the man page for details on how to use it. E.g. $ man mktags"
echo

if [[ $PATH == ${PATH/"${HOME}/bin"/} ]]; then #does PATH contain ~/bin?
  if [ "${OS}" == "Ubuntu" ]; then
    echo "export PATH=\$HOME/bin:\$PATH" >> ~/.profile
    echo "Appended a command to add $HOME/bin to PATH in $HOME/.profile"
    echo
  else
    echo "export PATH=\$HOME/bin:\$PATH" >> ~/.bash_profile
    echo "Appended a command to add $HOME/bin to PATH in $HOME/.bash_profile"
    echo
  fi
fi

if [ ! -d ~/man/man1 ]; then
  mkdir -p ~/man/man1
fi

#these could be pre-compressed
gzip -9 mktags.1 KBAWDUMP.1

cp -p mktags.1.gz KBAWDUMP.1.gz ~/man/man1

#keep the man pages uncompressed so that keyword expansion happens with builds
gunzip mktags.1.gz KBAWDUMP.1.gz

echo "Copied the mktags and KBAWDUMP man pages to $HOME/man/man1"
echo
echo "In order to install them system-wide, you need to be root. Consult the"
echo "SEE ALSO section of the man page on how to do this. E.g. $ man man"
echo

if [ "${OS}" == "Ubuntu" ]; then
  export MANPATH=:~/man #putting a colon at the beginning is a trick

  mandb -q

  echo "Added the $HOME/man directory to manpath, and rebuilt the database"
  echo
else
  grep -q MANPATH ~/.bash_profile

  if [ $? -eq 0 ]; then
    echo "Make sure ~/man is in the MANPATH search variable in ~/.bash_profile"
  else
    echo >> ~/.bash_profile
    echo "export MANPATH=~/man:`manpath`" >> ~/.bash_profile

    echo "Appended a command to add $HOME/man to MANPATH in $HOME/.bash_profile"
  fi

    echo "To access your man pages now, type: $ source $HOME/.bash_profile"
    echo
fi

if [ -f ~/.vimrc ]; then
  echo -n "Please type <enter> to continue: "
  read X
  echo

  question .vimrc
else
  cp -p vimrc ~/.vimrc

  echo "Installed new .vimrc file"
  echo
fi

if [ ! -d ~/.vim ]; then
  cp -a vim ~/.vim

  echo "Copied the vim utility package to $HOME/.vim"
  echo
else
  if [ -f ~/.vim/filetype.vim ]; then
    echo -n "Please type <enter> to continue: "
    read X
    echo

    question .vim/filetype.vim
  else
    cp -p vim/filetype.vim ~/.vim

    echo "Installed new filetype.vim file"
    echo
  fi

  if [ -f ~/.vim/scripts.vim ]; then
    echo -n "Please type <enter> to continue: "
    read X
    echo

    question .vim/scripts.vim
  else
    cp -p vim/scripts.vim ~/.vim

    echo "Installed new scripts.vim file"
    echo
  fi

  if [ ! -d ~/.vim/doc ]; then
    mkdir ~/.vim/doc
  fi
  
  cp -p vim/doc/m-tools.txt ~/.vim/doc/

  echo Copied vim/doc/m-tools.txt to ~/.vim/doc

  vim "+helptags $HOME/.vim/doc" "+quit"

  echo "Installed the vim help documentation"
  echo

  if [ ! -d ~/.vim/ftplugin ]; then
    mkdir ~/.vim/ftplugin
  fi
  
  cp -a vim/ftplugin/mumps ~/.vim/ftplugin/

  echo Copied vim/ftplugin/mumps/*.vim to ~/.vim/ftplugin/mumps
  echo
  
  if [ ! -d ~/.vim/plugin ]; then
    mkdir ~/.vim/plugin
  fi
  
  if [ -f ~/.vim/plugin/templates.vim ]; then
    echo -n "Please type <enter> to continue: "
    read X
    echo

    question .vim/plugin/templates.vim
  else
    cp -p vim/plugin/templates.vim ~/.vim/plugin

    echo "Installed new templates.vim file"
    echo
  fi
  
  if [ ! -d ~/.vim/syntax ]; then
    mkdir ~/.vim/syntax
  fi
  
  cp -p vim/syntax/mumps.vim ~/.vim/syntax/

  echo Copied vim/syntax/mumps.vim to ~/.vim/syntax
  echo
  
  if [ ! -d ~/.vim/templates ]; then
    mkdir ~/.vim/templates
  fi
  
  cp -p vim/templates/*.{tpl,pat} ~/.vim/templates/

  echo Copied vim/templates/*.{tpl,pat} to ~/.vim/templates
  echo
fi

echo "Finished installing the m-tools package"

exit 0


# $RCSfile: install $
